// Generated by CoffeeScript 1.6.2
(function() {
  var app;

  app = window.app;

  app.View.App = Backbone.View.extend({
    Forms: {
      Folder: {
        $el: $('#form-add-folder'),
        $title: $('#new-folder-title')
      },
      Note: {
        $el: $('#form-add-note'),
        $title: $('#new-note-title'),
        $body: $('#new-note-body'),
        $foldersList: $('#new-note-folder')
      }
    },
    Templates: {
      foldersSelectList: app.Template.Note.foldersSelectList
    },
    initialize: function() {
      this.addFolder = _.bind(this.addFolder, this);
      this.addNote = _.bind(this.addNote, this);
      this.focusFolderTitle = _.bind(this.focusFolderTitle, this);
      this.focusNoteTitle = _.bind(this.focusNoteTitle, this);
      this.clearFolder = _.bind(this.clearFolder, this);
      this.clearNote = _.bind(this.clearNote, this);
      this.Forms.Folder.$el.on('hidden', this.clearFolder).on('shown', this.focusFolderTitle).on('click', '.add-folder', this.addFolder);
      this.Forms.Folder.$title.on('keyup', this.addFolder);
      this.Forms.Note.$el.on('hidden', this.clearNote).on('shown', this.focusNoteTitle).on('click', '.add-note', this.addNote);
      this.renderFoldersSelectList;
      return this.listenEvents();
    },
    listenEvents: function() {
      this.listenTo(app.Collection.Folders, 'remove add change:title', this.renderFoldersSelectList);
    },
    addFolder: function(event) {
      var folder;

      if (event.type === 'keyup' && event.which !== 13) {
        return;
      }
      folder = new app.Model.Folder({
        title: this.Forms.Folder.$title.val()
      });
      app.Collection.Folders.add(folder);
      folder.save();
      return this.Forms.Folder.$el.modal('hide');
    },
    focusFolderTitle: function() {
      return this.Forms.Folder.$title.val('');
    },
    clearFolder: function() {
      return this.Forms.Folder.$title.val('');
    },
    addNote: function() {
      var note;

      note = new app.Model.Note({
        title: this.Forms.Note.$title.val(),
        body: this.Forms.Note.$body.val(),
        folder_id: this.Forms.Note.$foldersList.val()
      });
      app.Collection.Notes.add(note);
      note.save();
      return this.Forms.Note.$el.modal('hide');
    },
    focusNoteTitle: function() {
      return this.Forms.Note.$title.focus();
    },
    clearNote: function() {
      this.Forms.Note.$title.val('');
      return this.Forms.Note.$body.val('');
    },
    renderFoldersSelectList: function() {
      var folders;

      folders = this.Templates.foldersSelectList({
        folders: app.Collection.Folders.toJSON()
      });
      this.Forms.Note.$foldersList.html(folders);
      return this;
    }
  });

}).call(this);
