// Generated by CoffeeScript 1.6.2
(function() {
  var iterator;

  window.app = {
    Model: {},
    Collection: {},
    View: {},
    Mixin: {},
    Iterator: {},
    Template: {
      Folder: {},
      Note: {}
    }
  };

  iterator = (function() {
    return function() {
      var i;

      i = 0;
      return {
        next: function() {
          return ++i;
        },
        get: function() {
          return i;
        },
        set: function(newI) {
          return i = newI;
        }
      };
    };
  })();

  window.app.Iterator.folder = iterator();

  window.app.Iterator.note = iterator();

  Backbone.Model.prototype.toJSON = function() {
    var _ref;

    return _.extend({}, _.clone(this.attributes), {
      id: (_ref = this.id) != null ? _ref : this.cid
    });
  };

  Backbone.sync = function(method, model, options) {
    var data, _ref;

    data = {};
    data[model.storageKey] = (_ref = options.attrs) != null ? _ref : model.toJSON();
    switch (method) {
      case 'create':
      case 'update':
      case 'patch':
        return chrome.storage.local.set(data, function() {
          var errorMsg, _ref1;

          errorMsg = (_ref1 = chrome.runtime.lastError) != null ? _ref1.message : void 0;
          if (errorMsg != null) {
            return options.error(errorMsg);
          } else {
            return options.success;
          }
        });
      case 'delete':
        return chrome.storage.local.remove(storageName);
      case 'read':
        return chrome.storage.local.get(storageName);
    }
  };

}).call(this);
